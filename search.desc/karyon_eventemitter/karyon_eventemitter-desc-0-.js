searchState.loadedDescShard("karyon_eventemitter", 0, "karyon-eventemitter\nDerive macro for the AsEventValue trait\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait for event types that can be emitted.\nDefault buffer size for an event listener channel\nA timestamped event container.\nEventEmitter asynchronous event emitter.\nEventListener listens for and receives events from the …\nUnique identifier for event listeners\nTrait for events that define their own topic.\nInternal type alias for the nested HashMap structure that …\nCancels the event listener and removes it from the …\nRemoves all topics and event listeners.\nThe time at which the event was created.\nEmits an event to the listeners.\nEmits an event to the listeners.\nReturns a reference to the parent EventEmitter.\nReturns the event id for this event listener.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>EventEmitter</code>\nCreates a new <code>EventListener</code>.\nCreates a new Event.\nReceives the next event from the emitter.\nRegisters a new event listener for the given topic.\nInternal method to remove the event listener attached to …\nInternal method that handles the actual sending of events …\nReturns the topic this listener is registered for.\nUnregisters all event listeners for the given topic.\nThe value of the Event.\nCreates a new <code>EventEmitter</code> with the provided buffer size …")